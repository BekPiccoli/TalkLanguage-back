datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:postgres@localhost:5432/talklanguage"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                String             @id @default(uuid()) @db.Uuid
  email             String             @unique
  name              String?
  password          String
  age               Int?
  primaryLanguage   String?
  progress          Progress[]
  rewards           Reward[]
  createdAt         DateTime?          @default(now())
  updatedAt         DateTime?          @updatedAt
  dailyGoal         Int?
  streak            Int                @default(0)
  lastLogin         DateTime?
  level             Level?
  purpose           String?
  proficiencyTests  ProficiencyTest[]
}

model ExerciseGroup {
  id          String     @id @default(uuid()) @db.Uuid
  language    String?
  name        String?
  description String?
  exercises   Exercise[]
  createdAt   DateTime   @default(now())
}

model Exercise {
  id              String         @id @default(uuid()) @db.Uuid
  exerciseGroup   ExerciseGroup  @relation(fields: [exerciseGroupId], references: [id])
  exerciseGroupId String         @db.Uuid
  type            ExerciseType
  content         String
  options         String[]
  correctAnswer   String
  audio           String?
  Progress        Progress[]
}

model Progress {
  id          String    @id @default(uuid()) @db.Uuid
  user        User      @relation(fields: [userId], references: [id])
  userId      String    @db.Uuid
  exercise    Exercise  @relation(fields: [exerciseId], references: [id], onDelete: Cascade)
  exerciseId  String    @db.Uuid
  status      String
  correct     Boolean?
  updatedAt   DateTime  @updatedAt
}

model ProficiencyTest {
  id        String   @id @default(uuid()) @db.Uuid
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.Uuid
  dateTaken DateTime @default(now())
  score     Float?
  result    String
}

model Reward {
  id          String   @id @default(uuid()) @db.Uuid
  user        User     @relation(fields: [userId], references: [id])
  userId      String   @db.Uuid
  description String
  points      Int
  dateEarned  DateTime @default(now())
}

enum Level {
  INICIANTE
  INTERMEDIARIO
  AVANCADO
}

enum ExerciseType {
  VOCABULARIO
  COMPREENSAO_AUDITIVA
  COMPREENSAO_ESCRITA
  PRONUNCIA
}
